// Player places bet
const betBtn = document.getElementById('starting-bet');
const pointElement = document.getElementById('starting-points');
betBtn.innerHTML = (`BET: ${bet}`);
pointElement.innerHTML = (`${points} <br> points`);

const betIncrement = () => {
  if (gameInProgress === false) {
    for (bet = 1; bet <= 5; bet += 1) {
      console.log(bet);
      bet += 1;
      betBtn.innerHTML = (`BET: ${bet}`);
    }
  }
    betBtn.appendChild(betIncrement);
}

betBtn.addEventListener('click', betIncrement);
// betBtn.appendChild(bet);


// Sort array in sequential order
/* const isStraightHand = (playerHand) => {
 const sortedHand = playerHand.sort((a, b) => a.rank - b.rank);
  console.log(sortedHand);
  if (sortedHand[4].rank - sortedHand[0].rank === 4 && rankCounter === 5) {
  return true; 
  }

  let rankCounter = 0;
  for (i = 0; i < playerHand.length; i += 1) {
    const rankTally = playerHand[i].rank;
    // If there is a tally, increment its count
    if (rankTally in rankCounter) {
      rankCounter[rankTally] += 1;
    } // Else, initialise count of this rank to 1
    else {
    rankCounter[rankTally] = 1;
    }
  }



/*
**************************
*        TWO PAIRS
**************************
*/
// Create object as tally
const isTwoPairs = {};
// Loop over hand
for (i = 0; i < playerHand.length; i += 1) {
  const cardName = playerHand[i].name;
  // If there is a tally, increment its count
  if (cardName in isTwoPairs) {
    isTwoPairs[cardName] += 1;
  } // Else, initialise count of this card name to 1
 else {
  isTwoPairs[cardName] = 1;
}
console.log(`There are ${isTwoPairs[cardName]} ${cardName} in the hand`);
} 


/*
**************************
*     THREE OF A KIND
**************************

const cardNameTally = {};
// Loop over hand
for (i = 0; i < playerHand.length; i += 1) {
  const cardName = playerHand[i].name;
  // If there is a tally, increment its count
  if (cardName in cardNameTally) {
    cardNameTally[cardName] += 1;
  } // Else, initialise count of this card name to 1
 else {
  cardNameTally[cardName] = 1;
}
// console.log(`There are ${cardNameTally[cardName]} ${cardName} in the hand`);
}
*/


// Flush
/*  const isFlush = (playerHand) => {
  const suitSymbolTally = {};
  checkSuitTally(suitSymbolTally, playerHand);
  let flushCheck = false;
  const rankArray = Object.rank(suitSymbolTally);
  rankArray.forEach((rank => {
    if (rank === 5) {
      flushCheck = true;
    }
  }));
  if (flushCheck === true) {
    return true;
  } else {
    return false;
  }
}; */